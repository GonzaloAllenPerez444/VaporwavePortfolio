import*as O from"https://unpkg.com/three@0.150.1/build/three.module.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function e(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerpolicy&&(n.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?n.credentials="include":s.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=e(s);fetch(s.href,n)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const le="149";const ce=300,Qt=1e3,Tt=1001,Jt=1002,fe=1006,xe=1008,ge=1009,be=1023,Me=3e3,$t=35044;class Vt{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const n=s.indexOf(e);n!==-1&&s.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let n=0,a=s.length;n<a;n++)s[n].call(this,t);t.target=null}}}const B=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function Lt(){const g=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(B[g&255]+B[g>>8&255]+B[g>>16&255]+B[g>>24&255]+"-"+B[t&255]+B[t>>8&255]+"-"+B[t>>16&15|64]+B[t>>24&255]+"-"+B[e&63|128]+B[e>>8&255]+"-"+B[e>>16&255]+B[e>>24&255]+B[i&255]+B[i>>8&255]+B[i>>16&255]+B[i>>24&255]).toLowerCase()}function K(g,t,e){return Math.max(t,Math.min(e,g))}function kt(g,t){switch(t.constructor){case Float32Array:return g;case Uint16Array:return g/65535;case Uint8Array:return g/255;case Int16Array:return Math.max(g/32767,-1);case Int8Array:return Math.max(g/127,-1);default:throw new Error("Invalid component type.")}}function I(g,t){switch(t.constructor){case Float32Array:return g;case Uint16Array:return Math.round(g*65535);case Uint8Array:return Math.round(g*255);case Int16Array:return Math.round(g*32767);case Int8Array:return Math.round(g*127);default:throw new Error("Invalid component type.")}}class X{constructor(t=0,e=0){X.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),n=this.x-t.x,a=this.y-t.y;return this.x=n*i-a*s+t.x,this.y=n*s+a*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class dt{constructor(){dt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,i,s,n,a,r,l,o){const h=this.elements;return h[0]=t,h[1]=s,h[2]=r,h[3]=e,h[4]=n,h[5]=l,h[6]=i,h[7]=a,h[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,a=i[0],r=i[3],l=i[6],o=i[1],h=i[4],c=i[7],u=i[2],m=i[5],d=i[8],p=s[0],x=s[3],y=s[6],_=s[1],A=s[4],w=s[7],M=s[2],S=s[5],b=s[8];return n[0]=a*p+r*_+l*M,n[3]=a*x+r*A+l*S,n[6]=a*y+r*w+l*b,n[1]=o*p+h*_+c*M,n[4]=o*x+h*A+c*S,n[7]=o*y+h*w+c*b,n[2]=u*p+m*_+d*M,n[5]=u*x+m*A+d*S,n[8]=u*y+m*w+d*b,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],a=t[4],r=t[5],l=t[6],o=t[7],h=t[8];return e*a*h-e*r*o-i*n*h+i*r*l+s*n*o-s*a*l}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],a=t[4],r=t[5],l=t[6],o=t[7],h=t[8],c=h*a-r*o,u=r*l-h*n,m=o*n-a*l,d=e*c+i*u+s*m;if(d===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/d;return t[0]=c*p,t[1]=(s*o-h*i)*p,t[2]=(r*i-s*a)*p,t[3]=u*p,t[4]=(h*e-s*l)*p,t[5]=(s*n-r*e)*p,t[6]=m*p,t[7]=(i*l-o*e)*p,t[8]=(a*e-i*n)*p,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,n,a,r){const l=Math.cos(n),o=Math.sin(n);return this.set(i*l,i*o,-i*(l*a+o*r)+a+t,-s*o,s*l,-s*(-o*a+l*r)+r+e,0,0,1),this}scale(t,e){return this.premultiply(Ut.makeScale(t,e)),this}rotate(t){return this.premultiply(Ut.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ut.makeTranslation(t,e)),this}makeTranslation(t,e){return this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Ut=new dt;function _e(g){for(let t=g.length-1;t>=0;--t)if(g[t]>=65535)return!0;return!1}function te(g){return document.createElementNS("http://www.w3.org/1999/xhtml",g)}function Yt(g){return g<.04045?g*.0773993808:Math.pow(g*.9478672986+.0521327014,2.4)}let rt;class we{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{rt===void 0&&(rt=te("canvas")),rt.width=t.width,rt.height=t.height;const i=rt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=rt}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=te("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),n=s.data;for(let a=0;a<n.length;a++)n[a]=Yt(n[a]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(Yt(e[i]/255)*255):e[i]=Yt(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class ze{constructor(t=null){this.isSource=!0,this.uuid=Lt(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let a=0,r=s.length;a<r;a++)s[a].isDataTexture?n.push(qt(s[a].image)):n.push(qt(s[a]))}else n=qt(s);i.url=n}return e||(t.images[this.uuid]=i),i}}function qt(g){return typeof HTMLImageElement<"u"&&g instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&g instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&g instanceof ImageBitmap?we.getDataURL(g):g.data?{data:Array.from(g.data),width:g.width,height:g.height,type:g.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ae=0;class it extends Vt{constructor(t=it.DEFAULT_IMAGE,e=it.DEFAULT_MAPPING,i=Tt,s=Tt,n=fe,a=xe,r=be,l=ge,o=it.DEFAULT_ANISOTROPY,h=Me){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ae++}),this.uuid=Lt(),this.name="",this.source=new ze(t),this.mipmaps=[],this.mapping=e,this.wrapS=i,this.wrapT=s,this.magFilter=n,this.minFilter=a,this.anisotropy=o,this.format=r,this.internalFormat=null,this.type=l,this.offset=new X(0,0),this.repeat=new X(1,1),this.center=new X(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new dt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==ce)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Qt:t.x=t.x-Math.floor(t.x);break;case Tt:t.x=t.x<0?0:1;break;case Jt:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Qt:t.y=t.y-Math.floor(t.y);break;case Tt:t.y=t.y<0?0:1;break;case Jt:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}it.DEFAULT_IMAGE=null;it.DEFAULT_MAPPING=ce;it.DEFAULT_ANISOTROPY=1;class Mt{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,n,a,r){let l=i[s+0],o=i[s+1],h=i[s+2],c=i[s+3];const u=n[a+0],m=n[a+1],d=n[a+2],p=n[a+3];if(r===0){t[e+0]=l,t[e+1]=o,t[e+2]=h,t[e+3]=c;return}if(r===1){t[e+0]=u,t[e+1]=m,t[e+2]=d,t[e+3]=p;return}if(c!==p||l!==u||o!==m||h!==d){let x=1-r;const y=l*u+o*m+h*d+c*p,_=y>=0?1:-1,A=1-y*y;if(A>Number.EPSILON){const M=Math.sqrt(A),S=Math.atan2(M,y*_);x=Math.sin(x*S)/M,r=Math.sin(r*S)/M}const w=r*_;if(l=l*x+u*w,o=o*x+m*w,h=h*x+d*w,c=c*x+p*w,x===1-r){const M=1/Math.sqrt(l*l+o*o+h*h+c*c);l*=M,o*=M,h*=M,c*=M}}t[e]=l,t[e+1]=o,t[e+2]=h,t[e+3]=c}static multiplyQuaternionsFlat(t,e,i,s,n,a){const r=i[s],l=i[s+1],o=i[s+2],h=i[s+3],c=n[a],u=n[a+1],m=n[a+2],d=n[a+3];return t[e]=r*d+h*c+l*m-o*u,t[e+1]=l*d+h*u+o*c-r*m,t[e+2]=o*d+h*m+r*u-l*c,t[e+3]=h*d-r*c-l*u-o*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const i=t._x,s=t._y,n=t._z,a=t._order,r=Math.cos,l=Math.sin,o=r(i/2),h=r(s/2),c=r(n/2),u=l(i/2),m=l(s/2),d=l(n/2);switch(a){case"XYZ":this._x=u*h*c+o*m*d,this._y=o*m*c-u*h*d,this._z=o*h*d+u*m*c,this._w=o*h*c-u*m*d;break;case"YXZ":this._x=u*h*c+o*m*d,this._y=o*m*c-u*h*d,this._z=o*h*d-u*m*c,this._w=o*h*c+u*m*d;break;case"ZXY":this._x=u*h*c-o*m*d,this._y=o*m*c+u*h*d,this._z=o*h*d+u*m*c,this._w=o*h*c-u*m*d;break;case"ZYX":this._x=u*h*c-o*m*d,this._y=o*m*c+u*h*d,this._z=o*h*d-u*m*c,this._w=o*h*c+u*m*d;break;case"YZX":this._x=u*h*c+o*m*d,this._y=o*m*c+u*h*d,this._z=o*h*d-u*m*c,this._w=o*h*c-u*m*d;break;case"XZY":this._x=u*h*c-o*m*d,this._y=o*m*c-u*h*d,this._z=o*h*d+u*m*c,this._w=o*h*c+u*m*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],n=e[8],a=e[1],r=e[5],l=e[9],o=e[2],h=e[6],c=e[10],u=i+r+c;if(u>0){const m=.5/Math.sqrt(u+1);this._w=.25/m,this._x=(h-l)*m,this._y=(n-o)*m,this._z=(a-s)*m}else if(i>r&&i>c){const m=2*Math.sqrt(1+i-r-c);this._w=(h-l)/m,this._x=.25*m,this._y=(s+a)/m,this._z=(n+o)/m}else if(r>c){const m=2*Math.sqrt(1+r-i-c);this._w=(n-o)/m,this._x=(s+a)/m,this._y=.25*m,this._z=(l+h)/m}else{const m=2*Math.sqrt(1+c-i-r);this._w=(a-s)/m,this._x=(n+o)/m,this._y=(l+h)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(K(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,n=t._z,a=t._w,r=e._x,l=e._y,o=e._z,h=e._w;return this._x=i*h+a*r+s*o-n*l,this._y=s*h+a*l+n*r-i*o,this._z=n*h+a*o+i*l-s*r,this._w=a*h-i*r-s*l-n*o,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,n=this._z,a=this._w;let r=a*t._w+i*t._x+s*t._y+n*t._z;if(r<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,r=-r):this.copy(t),r>=1)return this._w=a,this._x=i,this._y=s,this._z=n,this;const l=1-r*r;if(l<=Number.EPSILON){const m=1-e;return this._w=m*a+e*this._w,this._x=m*i+e*this._x,this._y=m*s+e*this._y,this._z=m*n+e*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(l),h=Math.atan2(o,r),c=Math.sin((1-e)*h)/o,u=Math.sin(e*h)/o;return this._w=a*c+this._w*u,this._x=i*c+this._x*u,this._y=s*c+this._y*u,this._z=n*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=Math.random(),e=Math.sqrt(1-t),i=Math.sqrt(t),s=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(e*Math.cos(s),i*Math.sin(n),i*Math.cos(n),e*Math.sin(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class f{constructor(t=0,e=0,i=0){f.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(ee.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ee.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*s,this.y=n[1]*e+n[4]*i+n[7]*s,this.z=n[2]*e+n[5]*i+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=t.elements,a=1/(n[3]*e+n[7]*i+n[11]*s+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*s+n[12])*a,this.y=(n[1]*e+n[5]*i+n[9]*s+n[13])*a,this.z=(n[2]*e+n[6]*i+n[10]*s+n[14])*a,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,n=t.x,a=t.y,r=t.z,l=t.w,o=l*e+a*s-r*i,h=l*i+r*e-n*s,c=l*s+n*i-a*e,u=-n*e-a*i-r*s;return this.x=o*l+u*-n+h*-r-c*-a,this.y=h*l+u*-a+c*-n-o*-r,this.z=c*l+u*-r+o*-a-h*-n,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s,this.y=n[1]*e+n[5]*i+n[9]*s,this.z=n[2]*e+n[6]*i+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,n=t.z,a=e.x,r=e.y,l=e.z;return this.x=s*l-n*r,this.y=n*a-i*l,this.z=i*r-s*a,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return jt.copy(this).projectOnVector(t),this.sub(jt)}reflect(t){return this.sub(jt.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(K(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(e),this.y=i*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const jt=new f,ee=new Mt;class _t{constructor(t=new f(1/0,1/0,1/0),e=new f(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,i=1/0,s=1/0,n=-1/0,a=-1/0,r=-1/0;for(let l=0,o=t.length;l<o;l+=3){const h=t[l],c=t[l+1],u=t[l+2];h<e&&(e=h),c<i&&(i=c),u<s&&(s=u),h>n&&(n=h),c>a&&(a=c),u>r&&(r=u)}return this.min.set(e,i,s),this.max.set(n,a,r),this}setFromBufferAttribute(t){let e=1/0,i=1/0,s=1/0,n=-1/0,a=-1/0,r=-1/0;for(let l=0,o=t.count;l<o;l++){const h=t.getX(l),c=t.getY(l),u=t.getZ(l);h<e&&(e=h),c<i&&(i=c),u<s&&(s=u),h>n&&(n=h),c>a&&(a=c),u>r&&(r=u)}return this.min.set(e,i,s),this.max.set(n,a,r),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=$.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0)if(e&&i.attributes!=null&&i.attributes.position!==void 0){const n=i.attributes.position;for(let a=0,r=n.count;a<r;a++)$.fromBufferAttribute(n,a).applyMatrix4(t.matrixWorld),this.expandByPoint($)}else i.boundingBox===null&&i.computeBoundingBox(),Xt.copy(i.boundingBox),Xt.applyMatrix4(t.matrixWorld),this.union(Xt);const s=t.children;for(let n=0,a=s.length;n<a;n++)this.expandByObject(s[n],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,$),$.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(yt),Pt.subVectors(this.max,yt),at.subVectors(t.a,yt),ot.subVectors(t.b,yt),ht.subVectors(t.c,yt),V.subVectors(ot,at),G.subVectors(ht,ot),tt.subVectors(at,ht);let e=[0,-V.z,V.y,0,-G.z,G.y,0,-tt.z,tt.y,V.z,0,-V.x,G.z,0,-G.x,tt.z,0,-tt.x,-V.y,V.x,0,-G.y,G.x,0,-tt.y,tt.x,0];return!Wt(e,at,ot,ht,Pt)||(e=[1,0,0,0,1,0,0,0,1],!Wt(e,at,ot,ht,Pt))?!1:(Rt.crossVectors(V,G),e=[Rt.x,Rt.y,Rt.z],Wt(e,at,ot,ht,Pt))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return $.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize($).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(q[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),q[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),q[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),q[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),q[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),q[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),q[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),q[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(q),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const q=[new f,new f,new f,new f,new f,new f,new f,new f],$=new f,Xt=new _t,at=new f,ot=new f,ht=new f,V=new f,G=new f,tt=new f,yt=new f,Pt=new f,Rt=new f,et=new f;function Wt(g,t,e,i,s){for(let n=0,a=g.length-3;n<=a;n+=3){et.fromArray(g,n);const r=s.x*Math.abs(et.x)+s.y*Math.abs(et.y)+s.z*Math.abs(et.z),l=t.dot(et),o=e.dot(et),h=i.dot(et);if(Math.max(-Math.max(l,o,h),Math.min(l,o,h))>r)return!1}return!0}const Se=new _t,ft=new f,Zt=new f;class Ee{constructor(t=new f,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):Se.setFromPoints(t).getCenter(i);let s=0;for(let n=0,a=t.length;n<a;n++)s=Math.max(s,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ft.subVectors(t,this.center);const e=ft.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.addScaledVector(ft,s/i),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Zt.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ft.copy(t.center).add(Zt)),this.expandByPoint(ft.copy(t.center).sub(Zt))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}class Y{constructor(){Y.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,i,s,n,a,r,l,o,h,c,u,m,d,p,x){const y=this.elements;return y[0]=t,y[4]=e,y[8]=i,y[12]=s,y[1]=n,y[5]=a,y[9]=r,y[13]=l,y[2]=o,y[6]=h,y[10]=c,y[14]=u,y[3]=m,y[7]=d,y[11]=p,y[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Y().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/lt.setFromMatrixColumn(t,0).length(),n=1/lt.setFromMatrixColumn(t,1).length(),a=1/lt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*a,e[9]=i[9]*a,e[10]=i[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,n=t.z,a=Math.cos(i),r=Math.sin(i),l=Math.cos(s),o=Math.sin(s),h=Math.cos(n),c=Math.sin(n);if(t.order==="XYZ"){const u=a*h,m=a*c,d=r*h,p=r*c;e[0]=l*h,e[4]=-l*c,e[8]=o,e[1]=m+d*o,e[5]=u-p*o,e[9]=-r*l,e[2]=p-u*o,e[6]=d+m*o,e[10]=a*l}else if(t.order==="YXZ"){const u=l*h,m=l*c,d=o*h,p=o*c;e[0]=u+p*r,e[4]=d*r-m,e[8]=a*o,e[1]=a*c,e[5]=a*h,e[9]=-r,e[2]=m*r-d,e[6]=p+u*r,e[10]=a*l}else if(t.order==="ZXY"){const u=l*h,m=l*c,d=o*h,p=o*c;e[0]=u-p*r,e[4]=-a*c,e[8]=d+m*r,e[1]=m+d*r,e[5]=a*h,e[9]=p-u*r,e[2]=-a*o,e[6]=r,e[10]=a*l}else if(t.order==="ZYX"){const u=a*h,m=a*c,d=r*h,p=r*c;e[0]=l*h,e[4]=d*o-m,e[8]=u*o+p,e[1]=l*c,e[5]=p*o+u,e[9]=m*o-d,e[2]=-o,e[6]=r*l,e[10]=a*l}else if(t.order==="YZX"){const u=a*l,m=a*o,d=r*l,p=r*o;e[0]=l*h,e[4]=p-u*c,e[8]=d*c+m,e[1]=c,e[5]=a*h,e[9]=-r*h,e[2]=-o*h,e[6]=m*c+d,e[10]=u-p*c}else if(t.order==="XZY"){const u=a*l,m=a*o,d=r*l,p=r*o;e[0]=l*h,e[4]=-c,e[8]=o*h,e[1]=u*c+p,e[5]=a*h,e[9]=m*c-d,e[2]=d*c-m,e[6]=r*h,e[10]=p*c+u}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Te,t,ke)}lookAt(t,e,i){const s=this.elements;return L.subVectors(t,e),L.lengthSq()===0&&(L.z=1),L.normalize(),v.crossVectors(i,L),v.lengthSq()===0&&(Math.abs(i.z)===1?L.x+=1e-4:L.z+=1e-4,L.normalize(),v.crossVectors(i,L)),v.normalize(),Ct.crossVectors(L,v),s[0]=v.x,s[4]=Ct.x,s[8]=L.x,s[1]=v.y,s[5]=Ct.y,s[9]=L.y,s[2]=v.z,s[6]=Ct.z,s[10]=L.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,a=i[0],r=i[4],l=i[8],o=i[12],h=i[1],c=i[5],u=i[9],m=i[13],d=i[2],p=i[6],x=i[10],y=i[14],_=i[3],A=i[7],w=i[11],M=i[15],S=s[0],b=s[4],J=s[8],W=s[12],z=s[1],k=s[5],P=s[9],R=s[13],Z=s[2],C=s[6],H=s[10],wt=s[14],zt=s[3],At=s[7],St=s[11],Et=s[15];return n[0]=a*S+r*z+l*Z+o*zt,n[4]=a*b+r*k+l*C+o*At,n[8]=a*J+r*P+l*H+o*St,n[12]=a*W+r*R+l*wt+o*Et,n[1]=h*S+c*z+u*Z+m*zt,n[5]=h*b+c*k+u*C+m*At,n[9]=h*J+c*P+u*H+m*St,n[13]=h*W+c*R+u*wt+m*Et,n[2]=d*S+p*z+x*Z+y*zt,n[6]=d*b+p*k+x*C+y*At,n[10]=d*J+p*P+x*H+y*St,n[14]=d*W+p*R+x*wt+y*Et,n[3]=_*S+A*z+w*Z+M*zt,n[7]=_*b+A*k+w*C+M*At,n[11]=_*J+A*P+w*H+M*St,n[15]=_*W+A*R+w*wt+M*Et,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],n=t[12],a=t[1],r=t[5],l=t[9],o=t[13],h=t[2],c=t[6],u=t[10],m=t[14],d=t[3],p=t[7],x=t[11],y=t[15];return d*(+n*l*c-s*o*c-n*r*u+i*o*u+s*r*m-i*l*m)+p*(+e*l*m-e*o*u+n*a*u-s*a*m+s*o*h-n*l*h)+x*(+e*o*c-e*r*m-n*a*c+i*a*m+n*r*h-i*o*h)+y*(-s*r*h-e*l*c+e*r*u+s*a*c-i*a*u+i*l*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],a=t[4],r=t[5],l=t[6],o=t[7],h=t[8],c=t[9],u=t[10],m=t[11],d=t[12],p=t[13],x=t[14],y=t[15],_=c*x*o-p*u*o+p*l*m-r*x*m-c*l*y+r*u*y,A=d*u*o-h*x*o-d*l*m+a*x*m+h*l*y-a*u*y,w=h*p*o-d*c*o+d*r*m-a*p*m-h*r*y+a*c*y,M=d*c*l-h*p*l-d*r*u+a*p*u+h*r*x-a*c*x,S=e*_+i*A+s*w+n*M;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/S;return t[0]=_*b,t[1]=(p*u*n-c*x*n-p*s*m+i*x*m+c*s*y-i*u*y)*b,t[2]=(r*x*n-p*l*n+p*s*o-i*x*o-r*s*y+i*l*y)*b,t[3]=(c*l*n-r*u*n-c*s*o+i*u*o+r*s*m-i*l*m)*b,t[4]=A*b,t[5]=(h*x*n-d*u*n+d*s*m-e*x*m-h*s*y+e*u*y)*b,t[6]=(d*l*n-a*x*n-d*s*o+e*x*o+a*s*y-e*l*y)*b,t[7]=(a*u*n-h*l*n+h*s*o-e*u*o-a*s*m+e*l*m)*b,t[8]=w*b,t[9]=(d*c*n-h*p*n-d*i*m+e*p*m+h*i*y-e*c*y)*b,t[10]=(a*p*n-d*r*n+d*i*o-e*p*o-a*i*y+e*r*y)*b,t[11]=(h*r*n-a*c*n-h*i*o+e*c*o+a*i*m-e*r*m)*b,t[12]=M*b,t[13]=(h*p*s-d*c*s+d*i*u-e*p*u-h*i*x+e*c*x)*b,t[14]=(d*r*s-a*p*s-d*i*l+e*p*l+a*i*x-e*r*x)*b,t[15]=(a*c*s-h*r*s+h*i*l-e*c*l-a*i*u+e*r*u)*b,this}scale(t){const e=this.elements,i=t.x,s=t.y,n=t.z;return e[0]*=i,e[4]*=s,e[8]*=n,e[1]*=i,e[5]*=s,e[9]*=n,e[2]*=i,e[6]*=s,e[10]*=n,e[3]*=i,e[7]*=s,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),n=1-i,a=t.x,r=t.y,l=t.z,o=n*a,h=n*r;return this.set(o*a+i,o*r-s*l,o*l+s*r,0,o*r+s*l,h*r+i,h*l-s*a,0,o*l-s*r,h*l+s*a,n*l*l+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,n,a){return this.set(1,i,n,0,t,1,a,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,n=e._x,a=e._y,r=e._z,l=e._w,o=n+n,h=a+a,c=r+r,u=n*o,m=n*h,d=n*c,p=a*h,x=a*c,y=r*c,_=l*o,A=l*h,w=l*c,M=i.x,S=i.y,b=i.z;return s[0]=(1-(p+y))*M,s[1]=(m+w)*M,s[2]=(d-A)*M,s[3]=0,s[4]=(m-w)*S,s[5]=(1-(u+y))*S,s[6]=(x+_)*S,s[7]=0,s[8]=(d+A)*b,s[9]=(x-_)*b,s[10]=(1-(u+p))*b,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let n=lt.set(s[0],s[1],s[2]).length();const a=lt.set(s[4],s[5],s[6]).length(),r=lt.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],D.copy(this);const o=1/n,h=1/a,c=1/r;return D.elements[0]*=o,D.elements[1]*=o,D.elements[2]*=o,D.elements[4]*=h,D.elements[5]*=h,D.elements[6]*=h,D.elements[8]*=c,D.elements[9]*=c,D.elements[10]*=c,e.setFromRotationMatrix(D),i.x=n,i.y=a,i.z=r,this}makePerspective(t,e,i,s,n,a){const r=this.elements,l=2*n/(e-t),o=2*n/(i-s),h=(e+t)/(e-t),c=(i+s)/(i-s),u=-(a+n)/(a-n),m=-2*a*n/(a-n);return r[0]=l,r[4]=0,r[8]=h,r[12]=0,r[1]=0,r[5]=o,r[9]=c,r[13]=0,r[2]=0,r[6]=0,r[10]=u,r[14]=m,r[3]=0,r[7]=0,r[11]=-1,r[15]=0,this}makeOrthographic(t,e,i,s,n,a){const r=this.elements,l=1/(e-t),o=1/(i-s),h=1/(a-n),c=(e+t)*l,u=(i+s)*o,m=(a+n)*h;return r[0]=2*l,r[4]=0,r[8]=0,r[12]=-c,r[1]=0,r[5]=2*o,r[9]=0,r[13]=-u,r[2]=0,r[6]=0,r[10]=-2*h,r[14]=-m,r[3]=0,r[7]=0,r[11]=0,r[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const lt=new f,D=new Y,Te=new f(0,0,0),ke=new f(1,1,1),v=new f,Ct=new f,L=new f,ie=new Y,se=new Mt;class Nt{constructor(t=0,e=0,i=0,s=Nt.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,n=s[0],a=s[4],r=s[8],l=s[1],o=s[5],h=s[9],c=s[2],u=s[6],m=s[10];switch(e){case"XYZ":this._y=Math.asin(K(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-h,m),this._z=Math.atan2(-a,n)):(this._x=Math.atan2(u,o),this._z=0);break;case"YXZ":this._x=Math.asin(-K(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(r,m),this._z=Math.atan2(l,o)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(K(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,m),this._z=Math.atan2(-a,o)):(this._y=0,this._z=Math.atan2(l,n));break;case"ZYX":this._y=Math.asin(-K(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,m),this._z=Math.atan2(l,n)):(this._x=0,this._z=Math.atan2(-a,o));break;case"YZX":this._z=Math.asin(K(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,o),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(r,m));break;case"XZY":this._z=Math.asin(-K(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,o),this._y=Math.atan2(r,n)):(this._x=Math.atan2(-h,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return ie.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ie,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return se.setFromEuler(this),this.setFromQuaternion(se,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Nt.DEFAULT_ORDER="XYZ";class Pe{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Re=0;const ne=new f,ct=new Mt,j=new Y,Bt=new f,xt=new f,Ce=new f,Be=new Mt,re=new f(1,0,0),ae=new f(0,1,0),oe=new f(0,0,1),Oe={type:"added"},he={type:"removed"};class Q extends Vt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Re++}),this.uuid=Lt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Q.DEFAULT_UP.clone();const t=new f,e=new Nt,i=new Mt,s=new f(1,1,1);function n(){i.setFromEuler(e,!1)}function a(){e.setFromQuaternion(i,void 0,!1)}e._onChange(n),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new Y},normalMatrix:{value:new dt}}),this.matrix=new Y,this.matrixWorld=new Y,this.matrixAutoUpdate=Q.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Q.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Pe,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return ct.setFromAxisAngle(t,e),this.quaternion.multiply(ct),this}rotateOnWorldAxis(t,e){return ct.setFromAxisAngle(t,e),this.quaternion.premultiply(ct),this}rotateX(t){return this.rotateOnAxis(re,t)}rotateY(t){return this.rotateOnAxis(ae,t)}rotateZ(t){return this.rotateOnAxis(oe,t)}translateOnAxis(t,e){return ne.copy(t).applyQuaternion(this.quaternion),this.position.add(ne.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(re,t)}translateY(t){return this.translateOnAxis(ae,t)}translateZ(t){return this.translateOnAxis(oe,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(j.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?Bt.copy(t):Bt.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),xt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?j.lookAt(xt,Bt,this.up):j.lookAt(Bt,xt,this.up),this.quaternion.setFromRotationMatrix(j),s&&(j.extractRotation(s.matrixWorld),ct.setFromRotationMatrix(j),this.quaternion.premultiply(ct.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Oe)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(he)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(he)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),j.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),j.multiply(t.parent.matrixWorld)),t.applyMatrix4(j),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const a=this.children[i].getObjectByProperty(t,e);if(a!==void 0)return a}}getObjectsByProperty(t,e){let i=[];this[t]===e&&i.push(this);for(let s=0,n=this.children.length;s<n;s++){const a=this.children[s].getObjectsByProperty(t,e);a.length>0&&(i=i.concat(a))}return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xt,t,Ce),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xt,Be,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++){const n=e[i];(n.matrixWorldAutoUpdate===!0||t===!0)&&n.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const s=this.children;for(let n=0,a=s.length;n<a;n++){const r=s[n];r.matrixWorldAutoUpdate===!0&&r.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function n(r,l){return r[l.uuid]===void 0&&(r[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const r=this.geometry.parameters;if(r!==void 0&&r.shapes!==void 0){const l=r.shapes;if(Array.isArray(l))for(let o=0,h=l.length;o<h;o++){const c=l[o];n(t.shapes,c)}else n(t.shapes,l)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const r=[];for(let l=0,o=this.material.length;l<o;l++)r.push(n(t.materials,this.material[l]));s.material=r}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let r=0;r<this.children.length;r++)s.children.push(this.children[r].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let r=0;r<this.animations.length;r++){const l=this.animations[r];s.animations.push(n(t.animations,l))}}if(e){const r=a(t.geometries),l=a(t.materials),o=a(t.textures),h=a(t.images),c=a(t.shapes),u=a(t.skeletons),m=a(t.animations),d=a(t.nodes);r.length>0&&(i.geometries=r),l.length>0&&(i.materials=l),o.length>0&&(i.textures=o),h.length>0&&(i.images=h),c.length>0&&(i.shapes=c),u.length>0&&(i.skeletons=u),m.length>0&&(i.animations=m),d.length>0&&(i.nodes=d)}return i.object=s,i;function a(r){const l=[];for(const o in r){const h=r[o];delete h.metadata,l.push(h)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}Q.DEFAULT_UP=new f(0,1,0);Q.DEFAULT_MATRIX_AUTO_UPDATE=!0;Q.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const E=new f,Ot=new X;class mt{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=$t,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)Ot.fromBufferAttribute(this,e),Ot.applyMatrix3(t),this.setXY(e,Ot.x,Ot.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)E.fromBufferAttribute(this,e),E.applyMatrix3(t),this.setXYZ(e,E.x,E.y,E.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)E.fromBufferAttribute(this,e),E.applyMatrix4(t),this.setXYZ(e,E.x,E.y,E.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)E.fromBufferAttribute(this,e),E.applyNormalMatrix(t),this.setXYZ(e,E.x,E.y,E.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)E.fromBufferAttribute(this,e),E.transformDirection(t),this.setXYZ(e,E.x,E.y,E.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=kt(e,this.array)),e}setX(t,e){return this.normalized&&(e=I(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=kt(e,this.array)),e}setY(t,e){return this.normalized&&(e=I(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=kt(e,this.array)),e}setZ(t,e){return this.normalized&&(e=I(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=kt(e,this.array)),e}setW(t,e){return this.normalized&&(e=I(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=I(e,this.array),i=I(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=I(e,this.array),i=I(i,this.array),s=I(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,n){return t*=this.itemSize,this.normalized&&(e=I(e,this.array),i=I(i,this.array),s=I(s,this.array),n=I(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==$t&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Ie extends mt{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Le extends mt{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class It extends mt{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Ne=0;const F=new Y,Ht=new Q,ut=new f,N=new _t,gt=new _t,T=new f;class Gt extends Vt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ne++}),this.uuid=Lt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(_e(t)?Le:Ie)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new dt().getNormalMatrix(t);i.applyNormalMatrix(n),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return F.makeRotationFromQuaternion(t),this.applyMatrix4(F),this}rotateX(t){return F.makeRotationX(t),this.applyMatrix4(F),this}rotateY(t){return F.makeRotationY(t),this.applyMatrix4(F),this}rotateZ(t){return F.makeRotationZ(t),this.applyMatrix4(F),this}translate(t,e,i){return F.makeTranslation(t,e,i),this.applyMatrix4(F),this}scale(t,e,i){return F.makeScale(t,e,i),this.applyMatrix4(F),this}lookAt(t){return Ht.lookAt(t),Ht.updateMatrix(),this.applyMatrix4(Ht.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ut).negate(),this.translate(ut.x,ut.y,ut.z),this}setFromPoints(t){const e=[];for(let i=0,s=t.length;i<s;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new It(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new _t);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new f(-1/0,-1/0,-1/0),new f(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const n=e[i];N.setFromBufferAttribute(n),this.morphTargetsRelative?(T.addVectors(this.boundingBox.min,N.min),this.boundingBox.expandByPoint(T),T.addVectors(this.boundingBox.max,N.max),this.boundingBox.expandByPoint(T)):(this.boundingBox.expandByPoint(N.min),this.boundingBox.expandByPoint(N.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ee);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new f,1/0);return}if(t){const i=this.boundingSphere.center;if(N.setFromBufferAttribute(t),e)for(let n=0,a=e.length;n<a;n++){const r=e[n];gt.setFromBufferAttribute(r),this.morphTargetsRelative?(T.addVectors(N.min,gt.min),N.expandByPoint(T),T.addVectors(N.max,gt.max),N.expandByPoint(T)):(N.expandByPoint(gt.min),N.expandByPoint(gt.max))}N.getCenter(i);let s=0;for(let n=0,a=t.count;n<a;n++)T.fromBufferAttribute(t,n),s=Math.max(s,i.distanceToSquared(T));if(e)for(let n=0,a=e.length;n<a;n++){const r=e[n],l=this.morphTargetsRelative;for(let o=0,h=r.count;o<h;o++)T.fromBufferAttribute(r,o),l&&(ut.fromBufferAttribute(t,o),T.add(ut)),s=Math.max(s,i.distanceToSquared(T))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.array,s=e.position.array,n=e.normal.array,a=e.uv.array,r=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new mt(new Float32Array(4*r),4));const l=this.getAttribute("tangent").array,o=[],h=[];for(let z=0;z<r;z++)o[z]=new f,h[z]=new f;const c=new f,u=new f,m=new f,d=new X,p=new X,x=new X,y=new f,_=new f;function A(z,k,P){c.fromArray(s,z*3),u.fromArray(s,k*3),m.fromArray(s,P*3),d.fromArray(a,z*2),p.fromArray(a,k*2),x.fromArray(a,P*2),u.sub(c),m.sub(c),p.sub(d),x.sub(d);const R=1/(p.x*x.y-x.x*p.y);!isFinite(R)||(y.copy(u).multiplyScalar(x.y).addScaledVector(m,-p.y).multiplyScalar(R),_.copy(m).multiplyScalar(p.x).addScaledVector(u,-x.x).multiplyScalar(R),o[z].add(y),o[k].add(y),o[P].add(y),h[z].add(_),h[k].add(_),h[P].add(_))}let w=this.groups;w.length===0&&(w=[{start:0,count:i.length}]);for(let z=0,k=w.length;z<k;++z){const P=w[z],R=P.start,Z=P.count;for(let C=R,H=R+Z;C<H;C+=3)A(i[C+0],i[C+1],i[C+2])}const M=new f,S=new f,b=new f,J=new f;function W(z){b.fromArray(n,z*3),J.copy(b);const k=o[z];M.copy(k),M.sub(b.multiplyScalar(b.dot(k))).normalize(),S.crossVectors(J,k);const R=S.dot(h[z])<0?-1:1;l[z*4]=M.x,l[z*4+1]=M.y,l[z*4+2]=M.z,l[z*4+3]=R}for(let z=0,k=w.length;z<k;++z){const P=w[z],R=P.start,Z=P.count;for(let C=R,H=R+Z;C<H;C+=3)W(i[C+0]),W(i[C+1]),W(i[C+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new mt(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let u=0,m=i.count;u<m;u++)i.setXYZ(u,0,0,0);const s=new f,n=new f,a=new f,r=new f,l=new f,o=new f,h=new f,c=new f;if(t)for(let u=0,m=t.count;u<m;u+=3){const d=t.getX(u+0),p=t.getX(u+1),x=t.getX(u+2);s.fromBufferAttribute(e,d),n.fromBufferAttribute(e,p),a.fromBufferAttribute(e,x),h.subVectors(a,n),c.subVectors(s,n),h.cross(c),r.fromBufferAttribute(i,d),l.fromBufferAttribute(i,p),o.fromBufferAttribute(i,x),r.add(h),l.add(h),o.add(h),i.setXYZ(d,r.x,r.y,r.z),i.setXYZ(p,l.x,l.y,l.z),i.setXYZ(x,o.x,o.y,o.z)}else for(let u=0,m=e.count;u<m;u+=3)s.fromBufferAttribute(e,u+0),n.fromBufferAttribute(e,u+1),a.fromBufferAttribute(e,u+2),h.subVectors(a,n),c.subVectors(s,n),h.cross(c),i.setXYZ(u+0,h.x,h.y,h.z),i.setXYZ(u+1,h.x,h.y,h.z),i.setXYZ(u+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)T.fromBufferAttribute(t,e),T.normalize(),t.setXYZ(e,T.x,T.y,T.z)}toNonIndexed(){function t(r,l){const o=r.array,h=r.itemSize,c=r.normalized,u=new o.constructor(l.length*h);let m=0,d=0;for(let p=0,x=l.length;p<x;p++){r.isInterleavedBufferAttribute?m=l[p]*r.data.stride+r.offset:m=l[p]*h;for(let y=0;y<h;y++)u[d++]=o[m++]}return new mt(u,h,c)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Gt,i=this.index.array,s=this.attributes;for(const r in s){const l=s[r],o=t(l,i);e.setAttribute(r,o)}const n=this.morphAttributes;for(const r in n){const l=[],o=n[r];for(let h=0,c=o.length;h<c;h++){const u=o[h],m=t(u,i);l.push(m)}e.morphAttributes[r]=l}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let r=0,l=a.length;r<l;r++){const o=a[r];e.addGroup(o.start,o.count,o.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const o in l)l[o]!==void 0&&(t[o]=l[o]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const l in i){const o=i[l];t.data.attributes[l]=o.toJSON(t.data)}const s={};let n=!1;for(const l in this.morphAttributes){const o=this.morphAttributes[l],h=[];for(let c=0,u=o.length;c<u;c++){const m=o[c];h.push(m.toJSON(t.data))}h.length>0&&(s[l]=h,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const r=this.boundingSphere;return r!==null&&(t.data.boundingSphere={center:r.center.toArray(),radius:r.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const o in s){const h=s[o];this.setAttribute(o,h.clone(e))}const n=t.morphAttributes;for(const o in n){const h=[],c=n[o];for(let u=0,m=c.length;u<m;u++)h.push(c[u].clone(e));this.morphAttributes[o]=h}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let o=0,h=a.length;o<h;o++){const c=a[o];this.addGroup(c.start,c.count,c.materialIndex)}const r=t.boundingBox;r!==null&&(this.boundingBox=r.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}class vt extends Gt{constructor(t=1,e=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:s};const n=t/2,a=e/2,r=Math.floor(i),l=Math.floor(s),o=r+1,h=l+1,c=t/r,u=e/l,m=[],d=[],p=[],x=[];for(let y=0;y<h;y++){const _=y*u-a;for(let A=0;A<o;A++){const w=A*c-n;d.push(w,-_,0),p.push(0,0,1),x.push(A/r),x.push(1-y/l)}}for(let y=0;y<l;y++)for(let _=0;_<r;_++){const A=_+o*y,w=_+o*(y+1),M=_+1+o*(y+1),S=_+1+o*y;m.push(A,w,S),m.push(w,M,S)}this.setIndex(m),this.setAttribute("position",new It(d,3)),this.setAttribute("normal",new It(p,3)),this.setAttribute("uv",new It(x,2))}static fromJSON(t){return new vt(t.width,t.height,t.widthSegments,t.heightSegments)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:le}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=le);window.onbeforeunload=function(){window.scrollTo(0,0)};const pt=new O.Scene,Fe=new O.Clock,De=document.querySelector("#bg"),U={width:window.innerWidth,height:window.innerHeight},Kt=new O.TextureLoader,ue=Kt.load("./grid.png"),Ue=Kt.load("./displacementmapSmall.png");new O.MeshBasicMaterial({color:3146576});const me=new vt(1,2,24,24),de=new O.MeshStandardMaterial({color:9705087,map:ue,displacementMap:Ue,displacementScale:.4}),Ye=new O.MeshStandardMaterial({color:253050036,map:ue}),qe=new O.CircleGeometry(3,32),je=new O.MeshBasicMaterial({map:Kt.load("./sunTexture.jpg")}),pe=new O.Mesh(qe,je);pe.position.x+=.1;pt.add(pe);const Xe=new O.IcosahedronGeometry(.1),st=new O.Mesh(Xe,Ye);st.position.z=2.3;st.position.y=.4;st.position.x=-.2;pt.add(st);const Ft=new O.Mesh(me,de);Ft.rotation.x=-Math.PI*.5;Ft.position.y=0;Ft.position.z=3;const Dt=new O.Mesh(me,de);Dt.rotation.x=-Math.PI*.5;Dt.position.y=0;Dt.position.z=5;pt.add(Ft);pt.add(Dt);const nt=new O.PerspectiveCamera(75,U.width/U.height,.01,20);nt.position.x=0;nt.position.y=.1;nt.position.z=2.3;const We=new O.AmbientLight("#ffffff",10);pt.add(We);const bt=new O.WebGL1Renderer({canvas:De});bt.setSize(U.width,U.height);bt.setPixelRatio(Math.min(window.devicePixelRatio,2));window.addEventListener("resize",()=>{U.width=window.innerWidth,U.height=window.innerHeight,nt.aspect=U.width/U.height,nt.updateProjectionMatrix(),bt.setSize(U.width,U.height),bt.setPixelRatio(Math.min(window.devicePixelRatio,2))});const Ze=()=>{const g=Math.abs(document.body.getBoundingClientRect().top);document.getElementById("space").scrollHeight/1.17,nt.position.z=2.3+g*1e-4},ye=()=>{Fe.getElapsedTime(),document.onscroll=Ze,st.rotation.z+=.01,st.rotation.x+=.01,st.rotation.y+=.01,bt.render(pt,nt),window.requestAnimationFrame(ye)};ye();
